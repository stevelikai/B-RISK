<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NMathPremiumChartMicrosoft</name>
    </assembly>
    <members>
        <member name="T:CenterSpace.NMath.Charting.Microsoft.NMathChart">
            <summary>
            Class NMathChart provides static methods for plotting NMath types using the Microsoft
            Chart Controls for .NET.
            </summary>
            <remarks>
            Overloads of the ToChart() function are provided for common NMath types. ToChart() returns
            an instance of System.Windows.Forms.DataVisualization.Charting.Chart, which can
            be customized as desired.
            <code>
            Polynomial poly = new Polynomial( new DoubleVector( 4, 2, 5, -2, 3 ) );
            Chart chart = NMathChart.ToChart( poly, -1, 1 );
            chart.Titles.Add("Hello World");
            </code>
            The default look of the chart is governed by static properties on this class: DefaultSize,
            DefaultTitleFont, DefaultAxisTitleFont, DefaultMajorGridLineColor, and DefaultMarker.
            <br/>
            For prototyping and debugging console applications, the Show() function shows a given chart
            in a default form.
            <code>
            NMathChart.Show( chart );
            </code>
            Note that when the window is closed, the chart is disposed.
            <br/>
            If you do not need to customize the chart, overloads of Show() are also provided for common
            NMath types.
            <code>
            NMathChart.Show( poly );
            </code>
            This is equivalent to calling:
            <code>
            NMathChart.Show( NMathChart.ToChart( poly ) );
            </code>
            The Save() function saves a chart to a file or stream. 
            <code>
            NMathChart.Save( chart, "chart.png", ChartImageFormat.Png );
            </code>
            If you are developing a Windows Forms application using the Designer, add a Microsoft Chart
            control to your form, then update it with an NMath object using the appropriate Update() function
            after initialization. 
            <code>
            public Form1()
            {
              InitializeComponent();
              
              Polynomial poly = new Polynomial( new DoubleVector( 4, 2, 5, -2, 3 ) );
              NMathChart.Update( ref this.chart1, poly, -1, 1 );
            }
            </code>
            This has the following effect on your existing chart object:
            a new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used;
            axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added; titles are added only if the given chart does not currently contain any titles;
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="T:CenterSpace.NMath.Charting.Microsoft.NMathChart.AreaLayoutOrder">
            <summary>
            Enumeration for specifying the layout order of a composite chart.
            </summary>
        </member>
        <member name="F:CenterSpace.NMath.Charting.Microsoft.NMathChart.AreaLayoutOrder.ColumnMajor">
            <summary>
            Column-major order.
            </summary>
        </member>
        <member name="F:CenterSpace.NMath.Charting.Microsoft.NMathChart.AreaLayoutOrder.RowMajor">
            <summary>
            Row-major order.
            </summary>
        </member>
        <member name="P:CenterSpace.NMath.Charting.Microsoft.NMathChart.DefaultSize">
            <summary>
            Gets and sets the default size for new charts.
            </summary>
        </member>
        <member name="P:CenterSpace.NMath.Charting.Microsoft.NMathChart.DefaultTitleFont">
            <summary>
            Gets and sets the default primary title font for new charts.
            </summary>
        </member>
        <member name="P:CenterSpace.NMath.Charting.Microsoft.NMathChart.DefaultAxisTitleFont">
            <summary>
            Gets and sets the default axis title font for new charts.
            </summary>
        </member>
        <member name="P:CenterSpace.NMath.Charting.Microsoft.NMathChart.DefaultMajorGridLineColor">
            <summary>
            Gets and sets the default major grid line color for new charts.
            </summary>
        </member>
        <member name="P:CenterSpace.NMath.Charting.Microsoft.NMathChart.DefaultMarker">
            <summary>
            Gets and sets the default marker for new charts.
            </summary>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatVector)">
            <summary>
            Returns a line chart containing the given vector data.
            </summary>
            <param name="y">The y values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatVector)">
            <summary>
            Updates the given chart with the given vector data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="y">The y values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatVector)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="y">The y values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( y ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a line chart containing the given vector data.
            </summary>
            <param name="y">The y values.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the given vector data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="y">The y values.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="y">The y values.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( y, xUnits ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatVector,CenterSpace.NMath.Core.FloatVector)">
            <summary>
            Returns a new point (scatter) chart containing the given x-y data.
            </summary>
            <param name="x">The x values.</param>
            <param name="y">The y values.</param>
            <returns>A new chart.</returns>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">Thrown if x and y have different lengths.</exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatVector,CenterSpace.NMath.Core.FloatVector)">
            <summary>
            Updates the given chart with the given x-y data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="x">The x values.</param>
            <param name="y">The y values.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">Thrown if x and y have different lengths.</exception>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatVector,CenterSpace.NMath.Core.FloatVector)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="x">The x values.</param>
            <param name="y">The y values.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">Thrown if x and y have different lengths.</exception>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( x, y ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatVector[])">
            <summary>
            Returns a new line chart for the given vectors.
            </summary>
            <param name="data">The data.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatVector[])">
            <summary>
            Updates the given chart with the given data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first data.Length data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatVector[])">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatVector[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a new line chart for the given vectors.
            </summary>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatVector[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the given data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first data.Length data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatVector[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, xUnits ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleVector)">
            <summary>
            Returns a line chart containing the given vector data.
            </summary>
            <param name="y">The y values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleVector)">
            <summary>
            Updates the given chart with the given vector data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="y">The y values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleVector)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="y">The y values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( y ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a line chart containing the given vector data.
            </summary>
            <param name="y">The y values.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the given vector data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="y">The y values.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="y">The y values.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( y, xUnits ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector)">
            <summary>
            Returns a new point (scatter) chart containing the given x-y data.
            </summary>
            <param name="x">The x values.</param>
            <param name="y">The y values.</param>
            <returns>A new chart.</returns>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">Thrown if x and y have different lengths.</exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector)">
            <summary>
            Updates the given chart with the given x-y data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="x">The x values.</param>
            <param name="y">The y values.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">Thrown if x and y have different lengths.</exception>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="x">The x values.</param>
            <param name="y">The y values.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">Thrown if x and y have different lengths.</exception>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( x, y ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleVector[])">
            <summary>
            Returns a new line chart for the given vectors.
            </summary>
            <param name="data">The data.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleVector[])">
            <summary>
            Updates the given chart with the given data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first data.Length data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleVector[])">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleVector[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a new line chart for the given vectors.
            </summary>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleVector[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the given data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first data.Length data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleVector[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, xUnits ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatComplexVector)">
            <summary>
            Returns a line chart containing the magnitude of the given complex vector data.
            </summary>
            <param name="y">The y values.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot the given vector in the complex plane, use
            <code>
            Chart chart = ToChart( NMathFunctions.Real( y ), NMathFunctions.Imag( y ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatComplexVector)">
            <summary>
            Updates the given chart with the magnitude of the given complex vector data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="y">The y values.</param>
            <remarks>
            To plot the given vector in the complex plane, use
            <code>
            Update( ref chart, NMathFunctions.Real( y ), NMathFunctions.Imag( y ) );
            </code>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatComplexVector)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="y">The y values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( y ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatComplexVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a line chart containing the magnitude of the given complex vector data.
            </summary>
            <param name="y">The y values.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot the given vector in the complex plane, use
            <code>
            Chart chart = ToChart( NMathFunctions.Real( y ), NMathFunctions.Imag( y ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatComplexVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the magnitude of the given complex vector data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="y">The y values.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            To plot the given vector in the complex plane, use
            <code>
            Update( ref chart, NMathFunctions.Real( y ), NMathFunctions.Imag( y ) );
            </code>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatComplexVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="y">The y values.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( y, xUnits ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatComplexVector,CenterSpace.NMath.Core.FloatComplexVector)">
            <summary>
            Returns a new point (scatter) chart containing the magnitude of the given x-y complex data.
            </summary>
            <param name="x">The x values.</param>
            <param name="y">The y values.</param>
            <returns>A new chart.</returns>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">Thrown if x and y have different lengths.</exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatComplexVector,CenterSpace.NMath.Core.FloatComplexVector)">
            <summary>
            Updates the given chart with the magnitude of the given x-y complex data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="x">The x values.</param>
            <param name="y">The y values.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">Thrown if x and y have different lengths.</exception>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatComplexVector,CenterSpace.NMath.Core.FloatComplexVector)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="x">The x values.</param>
            <param name="y">The y values.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">Thrown if x and y have different lengths.</exception>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( x, y ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatComplexVector[])">
            <summary>
            Returns a new line chart for the magnitude of the given complex vectors.
            </summary>
            <param name="data">The data.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatComplexVector[])">
            <summary>
            Updates the given chart with the magnitude of the given complex data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first data.Length data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatComplexVector[])">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatComplexVector[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a new line chart for the magnitude of the given complex vectors.
            </summary>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatComplexVector[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the magnitude of the given complex data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first data.Length data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatComplexVector[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, xUnits ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleComplexVector)">
            <summary>
            Returns a line chart containing the magnitude of the given complex vector data.
            </summary>
            <param name="y">The y values.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot the given vector in the complex plane, use
            <code>
            Chart chart = ToChart( NMathFunctions.Real( y ), NMathFunctions.Imag( y ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleComplexVector)">
            <summary>
            Updates the given chart with the magnitude of the given complex vector data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="y">The y values.</param>
            <remarks>
            To plot the given vector in the complex plane, use
            <code>
            Update( ref chart, NMathFunctions.Real( y ), NMathFunctions.Imag( y ) );
            </code>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleComplexVector)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="y">The y values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( y ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleComplexVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a line chart containing the magnitude of the given complex vector data.
            </summary>
            <param name="y">The y values.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot the given vector in the complex plane, use
            <code>
            Chart chart = ToChart( NMathFunctions.Real( y ), NMathFunctions.Imag( y ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleComplexVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the magnitude of the given complex vector data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="y">The y values.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            To plot the given vector in the complex plane, use
            <code>
            Update( ref chart, NMathFunctions.Real( y ), NMathFunctions.Imag( y ) );
            </code>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleComplexVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="y">The y values.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( y, xUnits ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleComplexVector,CenterSpace.NMath.Core.DoubleComplexVector)">
            <summary>
            Returns a new point (scatter) chart containing the magnitude of the given x-y complex data.
            </summary>
            <param name="x">The x values.</param>
            <param name="y">The y values.</param>
            <returns>A new chart.</returns>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">Thrown if x and y have different lengths.</exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleComplexVector,CenterSpace.NMath.Core.DoubleComplexVector)">
            <summary>
            Updates the given chart with the magnitude of the given x-y complex data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="x">The x values.</param>
            <param name="y">The y values.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">Thrown if x and y have different lengths.</exception>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleComplexVector,CenterSpace.NMath.Core.DoubleComplexVector)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="x">The x values.</param>
            <param name="y">The y values.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">Thrown if x and y have different lengths.</exception>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( x, y ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleComplexVector[])">
            <summary>
            Returns a new line chart for the magnitude of the given complex vectors.
            </summary>
            <param name="data">The data.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleComplexVector[])">
            <summary>
            Updates the given chart with the magnitude of the given complex data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first data.Length data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleComplexVector[])">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleComplexVector[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a new line chart for the magnitude of the given complex vectors.
            </summary>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleComplexVector[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the magnitude of the given complex data.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first data.Length data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleComplexVector[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, xUnits ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatMatrix)">
            <summary>
            Returns a new line chart for the columns of the given matrix.
            </summary>
            <param name="data">The data.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatMatrix)">
            <summary>
            Updates the given chart with the columns of the given matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first data.Cols data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatMatrix)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatMatrix,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a new line chart for the columns of the given matrix.
            </summary>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatMatrix,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the columns of the given matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first data.Cols data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatMatrix,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, xUnits ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatMatrix,System.Int32,System.Int32)">
            <summary>
            Returns a new point chart for the specified columns of the given matrix (x, y) .
            </summary>
            <param name="data">The data.</param>
            <param name="xColIndex">The index of the matrix column containing the x data.</param>
            <param name="yColIndex">The index of the matrix column containing the y data.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatMatrix,System.Int32,System.Int32)">
            <summary>
            Updates the given chart with the columns of the given matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="xColIndex">The index of the matrix column containing the x data.</param>
            <param name="yColIndex">The index of the matrix column containing the y data.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatMatrix,System.Int32,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="xColIndex">The index of the matrix column containing the x data.</param>
            <param name="yColIndex">The index of the matrix column containing the y data.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, xColIndex, yColIndex ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatMatrix,System.Int32[])">
            <summary>
            Returns a new line chart for the specified columns of the given matrix.
            </summary>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatMatrix,System.Int32[])">
            <summary>
            Updates the given chart with the specified columns of the given matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first colIndices.Length data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatMatrix,System.Int32[])">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, colIndices ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatMatrix,System.Int32[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a new line chart for the specified columns of the given matrix.
            </summary>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatMatrix,System.Int32[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the specified columns of the given matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first colIndices.Length data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatMatrix,System.Int32[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, colIndices, xUnits ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleMatrix)">
            <summary>
            Returns a new line chart for the columns of the given matrix.
            </summary>
            <param name="data">The data.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleMatrix)">
            <summary>
            Updates the given chart with the columns of the given matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first data.Cols data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleMatrix)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleMatrix,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a new line chart for the columns of the given matrix.
            </summary>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleMatrix,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the columns of the given matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first data.Cols data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleMatrix,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, xUnits ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleMatrix,System.Int32,System.Int32)">
            <summary>
            Returns a new point chart for the specified columns of the given matrix (x, y) .
            </summary>
            <param name="data">The data.</param>
            <param name="xColIndex">The index of the matrix column containing the x data.</param>
            <param name="yColIndex">The index of the matrix column containing the y data.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleMatrix,System.Int32,System.Int32)">
            <summary>
            Updates the given chart with the columns of the given matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="xColIndex">The index of the matrix column containing the x data.</param>
            <param name="yColIndex">The index of the matrix column containing the y data.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleMatrix,System.Int32,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="xColIndex">The index of the matrix column containing the x data.</param>
            <param name="yColIndex">The index of the matrix column containing the y data.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, xColIndex, yColIndex ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleMatrix,System.Int32[])">
            <summary>
            Returns a new line chart for the specified columns of the given matrix.
            </summary>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleMatrix,System.Int32[])">
            <summary>
            Updates the given chart with the specified columns of the given matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first colIndices.Length data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleMatrix,System.Int32[])">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, colIndices ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleMatrix,System.Int32[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a new line chart for the specified columns of the given matrix.
            </summary>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleMatrix,System.Int32[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the specified columns of the given matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first colIndices.Length data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleMatrix,System.Int32[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, colIndices, xUnits ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatComplexMatrix)">
            <summary>
            Returns a new line chart for the magnitude of the columns of the given complex matrix.
            </summary>
            <param name="data">The data.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatComplexMatrix)">
            <summary>
            Updates the given chart with the magnitude of the columns of the given complex matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first data.Cols data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatComplexMatrix)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatComplexMatrix,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a new line chart for the magnitude of the columns of the given complex matrix.
            </summary>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatComplexMatrix,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the magnitude of the columns of the given complex matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first data.Cols data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatComplexMatrix,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, xUnits ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatComplexMatrix,System.Int32,System.Int32)">
            <summary>
            Returns a new point chart for the magnitude of the specified columns of the given complex matrix (x, y) .
            </summary>
            <param name="data">The data.</param>
            <param name="xColIndex">The index of the matrix column containing the x data.</param>
            <param name="yColIndex">The index of the matrix column containing the y data.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatComplexMatrix,System.Int32,System.Int32)">
            <summary>
            Updates the given chart with the magnitude of the columns of the given complex matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="xColIndex">The index of the matrix column containing the x data.</param>
            <param name="yColIndex">The index of the matrix column containing the y data.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatComplexMatrix,System.Int32,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="xColIndex">The index of the matrix column containing the x data.</param>
            <param name="yColIndex">The index of the matrix column containing the y data.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, xColIndex, yColIndex ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatComplexMatrix,System.Int32[])">
            <summary>
            Returns a new line chart for the magnitude of the specified columns of the given complex matrix.
            </summary>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatComplexMatrix,System.Int32[])">
            <summary>
            Updates the given chart with the magnitude of the specified columns of the given complex matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first colIndices.Length data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatComplexMatrix,System.Int32[])">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, colIndices ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatComplexMatrix,System.Int32[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a new line chart for the magnitude of the specified columns of the given complex matrix.
            </summary>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatComplexMatrix,System.Int32[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the magnitude of the specified columns of the given complex matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first colIndices.Length data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatComplexMatrix,System.Int32[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, colIndices, xUnits ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleComplexMatrix)">
            <summary>
            Returns a new line chart for the magnitude of the columns of the given complex matrix.
            </summary>
            <param name="data">The data.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleComplexMatrix)">
            <summary>
            Updates the given chart with the magnitude of the columns of the given complex matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first data.Cols data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleComplexMatrix)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleComplexMatrix,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a new line chart for the magnitude of the columns of the given complex matrix.
            </summary>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleComplexMatrix,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the magnitude of the columns of the given complex matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first data.Cols data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleComplexMatrix,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, xUnits ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleComplexMatrix,System.Int32,System.Int32)">
            <summary>
            Returns a new point chart for the magnitude of the specified columns of the given complex matrix (x, y) .
            </summary>
            <param name="data">The data.</param>
            <param name="xColIndex">The index of the matrix column containing the x data.</param>
            <param name="yColIndex">The index of the matrix column containing the y data.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleComplexMatrix,System.Int32,System.Int32)">
            <summary>
            Updates the given chart with the magnitude of the columns of the given complex matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="xColIndex">The index of the matrix column containing the x data.</param>
            <param name="yColIndex">The index of the matrix column containing the y data.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleComplexMatrix,System.Int32,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="xColIndex">The index of the matrix column containing the x data.</param>
            <param name="yColIndex">The index of the matrix column containing the y data.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, xColIndex, yColIndex ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleComplexMatrix,System.Int32[])">
            <summary>
            Returns a new line chart for the magnitude of the specified columns of the given complex matrix.
            </summary>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleComplexMatrix,System.Int32[])">
            <summary>
            Updates the given chart with the magnitude of the specified columns of the given complex matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first colIndices.Length data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleComplexMatrix,System.Int32[])">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, colIndices ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleComplexMatrix,System.Int32[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a new line chart for the magnitude of the specified columns of the given complex matrix.
            </summary>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
            <remarks>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleComplexMatrix,System.Int32[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the magnitude of the specified columns of the given complex matrix.
            </summary>
            <param name="chart">A chart.</param>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            To plot matrix rows, call data.Transpose().
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first colIndices.Length data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleComplexMatrix,System.Int32[],CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="data">The data.</param>
            <param name="colIndices">The indices of the columns to plot.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( data, colIndices, xUnits ) );
            </code>
            To plot matrix rows, call data.Transpose().
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatLeastSquares,CenterSpace.NMath.Core.FloatVector)">
            <summary>
            Returns a new line chart comparing the specified right-hand side with that predicted by the given model.
            </summary>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <returns>A new chart.</returns>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatLeastSquares,CenterSpace.NMath.Core.FloatVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a new line chart comparing the specified right-hand side with that predicted by the given model.
            </summary>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatLeastSquares,CenterSpace.NMath.Core.FloatVector)">
            <summary>
            Updates the given chart with the specified least squares model.
            </summary>
            <param name="chart">A chart.</param>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatLeastSquares,CenterSpace.NMath.Core.FloatVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the specified least squares model.
            </summary>
            <param name="chart">A chart.</param>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatLeastSquares,CenterSpace.NMath.Core.FloatVector)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( lsq, y ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatLeastSquares,CenterSpace.NMath.Core.FloatVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( lsq, y, xUnits ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleLeastSquares,CenterSpace.NMath.Core.DoubleVector)">
            <summary>
            Returns a new line chart comparing the specified right-hand side with that predicted by the given model.
            </summary>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <returns>A new chart.</returns>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleLeastSquares,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a new line chart comparing the specified right-hand side with that predicted by the given model.
            </summary>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleLeastSquares,CenterSpace.NMath.Core.DoubleVector)">
            <summary>
            Updates the given chart with the specified least squares model.
            </summary>
            <param name="chart">A chart.</param>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleLeastSquares,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the specified least squares model.
            </summary>
            <param name="chart">A chart.</param>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleLeastSquares,CenterSpace.NMath.Core.DoubleVector)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( lsq, y ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleLeastSquares,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( lsq, y, xUnits ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatComplexLeastSquares,CenterSpace.NMath.Core.FloatComplexVector)">
            <summary>
            Returns a new line chart comparing the specified right-hand side with that predicted by the given model.
            </summary>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <returns>A new chart.</returns>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.FloatComplexLeastSquares,CenterSpace.NMath.Core.FloatComplexVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a new line chart comparing the specified right-hand side with that predicted by the given model.
            </summary>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatComplexLeastSquares,CenterSpace.NMath.Core.FloatComplexVector)">
            <summary>
            Updates the given chart with the specified least squares model.
            </summary>
            <param name="chart">A chart.</param>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.FloatComplexLeastSquares,CenterSpace.NMath.Core.FloatComplexVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the specified least squares model.
            </summary>
            <param name="chart">A chart.</param>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatComplexLeastSquares,CenterSpace.NMath.Core.FloatComplexVector)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( lsq, y ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.FloatComplexLeastSquares,CenterSpace.NMath.Core.FloatComplexVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( lsq, y, xUnits ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleComplexLeastSquares,CenterSpace.NMath.Core.DoubleComplexVector)">
            <summary>
            Returns a new line chart comparing the specified right-hand side with that predicted by the given model.
            </summary>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <returns>A new chart.</returns>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleComplexLeastSquares,CenterSpace.NMath.Core.DoubleComplexVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Returns a new line chart comparing the specified right-hand side with that predicted by the given model.
            </summary>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <returns>A new chart.</returns>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleComplexLeastSquares,CenterSpace.NMath.Core.DoubleComplexVector)">
            <summary>
            Updates the given chart with the specified least squares model.
            </summary>
            <param name="chart">A chart.</param>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleComplexLeastSquares,CenterSpace.NMath.Core.DoubleComplexVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Updates the given chart with the specified least squares model.
            </summary>
            <param name="chart">A chart.</param>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleComplexLeastSquares,CenterSpace.NMath.Core.DoubleComplexVector)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( lsq, y ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleComplexLeastSquares,CenterSpace.NMath.Core.DoubleComplexVector,CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="lsq">Least squares object.</param>
            <param name="y">The right-hand side of the linear system.</param>
            <param name="xUnits">The units for the x-axis.</param>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">
            Thrown if the length of y does not equal the length of lsq.YHat.
            </exception>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( lsq, y, xUnits ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.OneVariableFunction,System.Double,System.Double,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given function.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.OneVariableFunction,System.Double,System.Double,System.Int32)">
            <summary>
            Updates the given chart with the specified function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.OneVariableFunction,System.Double,System.Double,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( f, xmin, ymin, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.OneVariableFunction,System.Double,System.Double,System.Int32,System.Collections.Generic.Dictionary{System.Double,System.String})">
            <summary>
            Returns a new line chart by interpolating over the given function.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <param name="pointLabels">
            A dictionary mapping key x-values to labels. The specified points will be labelled on the interpolated curve.
            If necessary, the x-values will be inserted into the interpolated data series.
            </param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.OneVariableFunction,System.Double,System.Double,System.Int32,System.Collections.Generic.Dictionary{System.Double,System.String})">
            <summary>
            Updates the given chart with the specified function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <param name="pointLabels">
            A dictionary mapping key x-values to labels. The specified points will be labelled on the interpolated curve.
            If necessary, the x-values will be inserted into the interpolated data series.
            </param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.OneVariableFunction,System.Double,System.Double,System.Int32,System.Collections.Generic.Dictionary{System.Double,System.String})">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <param name="pointLabels">
            A dictionary mapping key x-values to labels. The specified points will be labelled on the interpolated curve.
            If necessary, the x-values will be inserted into the interpolated data series.
            </param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( f, xmin, ymin, pointLabels, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.Polynomial,System.Double,System.Double,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given function.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.Polynomial,System.Double,System.Double,System.Int32)">
            <summary>
            Updates the given chart with the specified function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.Polynomial,System.Double,System.Double,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( f, xmin, ymin, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.LinearSpline,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given function.
            </summary>
            <param name="f">The function.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.LinearSpline,System.Int32)">
            <summary>
            Updates the given chart with the specified function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="f">The function.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.LinearSpline,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="f">The function.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( f, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.LinearSpline,System.Double,System.Double,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given function.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.LinearSpline,System.Double,System.Double,System.Int32)">
            <summary>
            Updates the given chart with the specified function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.LinearSpline,System.Double,System.Double,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( f, xmin, ymin, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.ClampedCubicSpline,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given function.
            </summary>
            <param name="f">The function.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.ClampedCubicSpline,System.Int32)">
            <summary>
            Updates the given chart with the specified function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="f">The function.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.ClampedCubicSpline,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="f">The function.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( f, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.ClampedCubicSpline,System.Double,System.Double,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given function.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.ClampedCubicSpline,System.Double,System.Double,System.Int32)">
            <summary>
            Updates the given chart with the specified function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.ClampedCubicSpline,System.Double,System.Double,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( f, xmin, ymin, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.NaturalCubicSpline,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given function.
            </summary>
            <param name="f">The function.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.NaturalCubicSpline,System.Int32)">
            <summary>
            Updates the given chart with the specified function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="f">The function.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.NaturalCubicSpline,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="f">The function.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( f, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.NaturalCubicSpline,System.Double,System.Double,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given function.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.NaturalCubicSpline,System.Double,System.Double,System.Int32)">
            <summary>
            Updates the given chart with the specified function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.NaturalCubicSpline,System.Double,System.Double,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( f, xmin, ymin, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Analysis.SmoothCubicSpline,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given function.
            </summary>
            <param name="f">The function.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Analysis.SmoothCubicSpline,System.Int32)">
            <summary>
            Updates the given chart with the specified function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="f">The function.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Analysis.SmoothCubicSpline,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="f">The function.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( f, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Analysis.SmoothCubicSpline,System.Double,System.Double,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given function.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Analysis.SmoothCubicSpline,System.Double,System.Double,System.Int32)">
            <summary>
            Updates the given chart with the specified function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Analysis.SmoothCubicSpline,System.Double,System.Double,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( f, xmin, ymin, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleParameterizedFunction,CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given parameterized function.
            </summary>
            <param name="f">The function.</param>
            <param name="parameters">The function parameters.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleParameterizedFunction,CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,System.Int32)">
            <summary>
            Updates the given chart with the specified function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="f">The parameterized function.</param>
            <param name="parameters">The function parameters.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleParameterizedFunction,CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="f">The function.</param>
            <param name="parameters">The function parameters.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( f, parameters, xmin, ymin, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.DoubleParameterizedDelegate,CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given parameterized function.
            </summary>
            <param name="f">The function.</param>
            <param name="parameters">The function parameters.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.DoubleParameterizedDelegate,CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,System.Int32)">
            <summary>
            Updates the given chart with the specified parameterized function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="f">The function.</param>
            <param name="parameters">The function parameters.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.DoubleParameterizedDelegate,CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="f">The function.</param>
            <param name="parameters">The function parameters.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( f, parameters, xmin, ymin, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(System.Func{System.Double,System.Double},System.Double,System.Double,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given function.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,System.Func{System.Double,System.Double},System.Double,System.Double,System.Int32)">
            <summary>
            Updates the given chart with the specified function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(System.Func{System.Double,System.Double},System.Double,System.Double,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( f, xmin, ymin, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(System.Func{CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double},CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given parameterized function.
            </summary>
            <param name="f">The function.</param>
            <param name="parameters">The function parameters.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,System.Func{CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double},CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,System.Int32)">
            <summary>
            Updates the given chart with the specified function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="f">The parameterized function.</param>
            <param name="parameters">The function parameters.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(System.Func{CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double},CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="f">The function.</param>
            <param name="parameters">The function parameters.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( f, parameters, xmin, ymin, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.PeakFinderSavitzkyGolay)">
            <summary>
            Returns a line chart showing the peaks in the data.
            </summary>
            <param name="pf">The peak finder.</param>
            <returns>A new chart.</returns>
            <remarks>
            Call LocatePeaks() on the peak finder prior to charting.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.PeakFinderSavitzkyGolay)">
            <summary>
            Updates the given chart with the specified peak finder.
            </summary>
            <param name="chart">A chart.</param>
            <param name="pf">The peak finder.</param>
            <remarks>
            Call LocatePeaks() on the peak finder prior to charting.
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.PeakFinderSavitzkyGolay)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="pf">The peak finder.</param>
            <remarks>
            Call LocatePeaks() on the peak finder prior to charting.
            <br/>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( pf ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.PeakFinderSavitzkyGolay,System.Double,System.Double)">
            <summary>
            Returns a line chart showing the peaks in the data.
            </summary>
            <param name="pf">The peak finder.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <returns>A new chart.</returns>
            <remarks>
            Call LocatePeaks() on the peak finder prior to charting.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.PeakFinderSavitzkyGolay,System.Double,System.Double)">
            <summary>
            Updates the given chart with the specified peak finder.
            </summary>
            <param name="chart">A chart.</param>
            <param name="pf">The peak finder.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <remarks>
            Call LocatePeaks() on the peak finder prior to charting.
            <br/>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.PeakFinderSavitzkyGolay,System.Double,System.Double)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="pf">The peak finder.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <remarks>
            Call LocatePeaks() on the peak finder prior to charting.
            <br/>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( pf, xmin, xmax ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Analysis.Bracket,System.Int32)">
            <summary>
            Returns a line chart showing the bracketed region of contained function.
            </summary>
            <param name="bracket">The bracket, with contained function.</param>
            <param name="numInterpolatedValues">The number of interpolated values. The bracket Lower, Interior, and Upper values
            may additionally be inserted into the interpolated series.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Analysis.Bracket,System.Int32)">
            <summary>
            Updates the given chart with the specified bracket.
            </summary>
            <param name="chart">A chart.</param>
            <param name="bracket">The bracket, with contained function.</param>
            <param name="numInterpolatedValues">The number of interpolated values. The bracket Lower, Interior, and Upper values
            may additionally be inserted into the interpolated series.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Analysis.Bracket,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="bracket">The bracket, with contained function.</param>
            <param name="numInterpolatedValues">The number of interpolated values. The bracket Lower, Interior, and Upper values
            may additionally be inserted into the interpolated series.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( bracket, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.Histogram)">
            <summary>
            Returns a bar chart showing the counts of each bin in the histogram.
            </summary>
            <param name="histogram">The histogram.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.Histogram)">
            <summary>
            Updates the given chart with the specified histogram.
            </summary>
            <param name="chart">A chart.</param>
            <param name="histogram">The histogram.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.Histogram)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="histogram">The histogram.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( histogram ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Analysis.PolynomialLeastSquares,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given fitted polynomial.
            </summary>
            <param name="pls">A PolynomialLeastSquares object containing a least squares fit of a polynomial to
            the data.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Analysis.PolynomialLeastSquares,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given fitted polynomial.
            </summary>
            <param name="pls">A PolynomialLeastSquares object containing a least squares fit of a polynomial to
              the data.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Analysis.PolynomialLeastSquares,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Int32)">
            <summary>
            Updates the given chart with the specified fitted polynomial.
            </summary>
            <param name="chart">A chart.</param>
            <param name="pls">A PolynomialLeastSquares object containing a least squares fit of a polynomial to
            the data.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Analysis.PolynomialLeastSquares,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,System.Int32)">
            <summary>
            Updates the given chart with the specified fitted polynomial.
            </summary>
            <param name="chart">A chart.</param>
            <param name="pls">A PolynomialLeastSquares object containing a least squares fit of a polynomial to
              the data.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Analysis.PolynomialLeastSquares,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="pls">A PolynomialLeastSquares object containing a least squares fit of a polynomial to
            the data.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( pls, x, y, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Analysis.PolynomialLeastSquares,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="pls">A PolynomialLeastSquares object containing a least squares fit of a polynomial to
            the data.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( pls, x, y, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart``1(CenterSpace.NMath.Analysis.OneVariableFunctionFitter{``0},CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given fitted function.
            </summary>
            <param name="ovf">A OneVariableFunctionFitter object containing a least squares fit of a
            parameterized function to the given x,y values.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="solution">>The parameters of the function at the found minimum.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart``1(CenterSpace.NMath.Analysis.OneVariableFunctionFitter{``0},CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,CenterSpace.NMath.Core.DoubleVector,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given fitted function.
            </summary>
            <param name="ovf">A OneVariableFunctionFitter object containing a least squares fit of a
              parameterized function to the given x,y values.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="solution">>The parameters of the function at the found minimum.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update``1(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Analysis.OneVariableFunctionFitter{``0},CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Int32)">
            <summary>
            Updates the given chart with the specified fitted function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="ovf">A OneVariableFunctionFitter object containing a least squares fit of a
            parameterized function to the given x,y values.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="solution">>The parameters of the function at the found minimum.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update``1(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Analysis.OneVariableFunctionFitter{``0},CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,CenterSpace.NMath.Core.DoubleVector,System.Int32)">
            <summary>
            Updates the given chart with the specified fitted function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="ovf">A OneVariableFunctionFitter object containing a least squares fit of a
              parameterized function to the given x,y values.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="solution">>The parameters of the function at the found minimum.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show``1(CenterSpace.NMath.Analysis.OneVariableFunctionFitter{``0},CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="ovf">A OneVariableFunctionFitter object containing a least squares fit of a
            parameterized function to the given x,y values.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="solution">>The parameters of the function at the found minimum.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( ovf, x, y, solution, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show``1(CenterSpace.NMath.Analysis.OneVariableFunctionFitter{``0},CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,CenterSpace.NMath.Core.DoubleVector,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="ovf">A OneVariableFunctionFitter object containing a least squares fit of a
            parameterized function to the given x,y values.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="solution">The parameters of the function at the found minimum.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( ovf, x, y, solution, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart``1(CenterSpace.NMath.Analysis.BoundedOneVariableFunctionFitter{``0},CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given fitted function.
            </summary>
            <param name="ovf">A BoundedOneVariableFunctionFitter object containing a least squares fit of a
            parameterized function to the given x,y values.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="solution">>The parameters of the function at the found minimum.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart``1(CenterSpace.NMath.Analysis.BoundedOneVariableFunctionFitter{``0},CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,CenterSpace.NMath.Core.DoubleVector,System.Int32)">
            <summary>
            Returns a new line chart by interpolating over the given fitted function.
            </summary>
            <param name="ovf">A BoundedOneVariableFunctionFitter object containing a least squares fit of a
              parameterized function to the given x,y values.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <param name="solution">>The parameters of the function at the found minimum.</param>
            <returns>A new chart.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update``1(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Analysis.BoundedOneVariableFunctionFitter{``0},CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Int32)">
            <summary>
            Updates the given chart with the specified fitted function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="ovf">A BoundedOneVariableFunctionFitter object containing a least squares fit of a
            parameterized function to the given x,y values.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="solution">>The parameters of the function at the found minimum.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update``1(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Analysis.BoundedOneVariableFunctionFitter{``0},CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,CenterSpace.NMath.Core.DoubleVector,System.Int32)">
            <summary>
            Updates the given chart with the specified fitted function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="ovf">A BoundedOneVariableFunctionFitter object containing a least squares fit of a
              parameterized function to the given x,y values.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="solution">>The parameters of the function at the found minimum.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first two data series are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show``1(CenterSpace.NMath.Analysis.BoundedOneVariableFunctionFitter{``0},CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="ovf">A BoundedOneVariableFunctionFitter object containing a least squares fit of a
            parameterized function to the given x,y values.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="solution">>The parameters of the function at the found minimum.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( ovf, x, y, solution, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show``1(CenterSpace.NMath.Analysis.BoundedOneVariableFunctionFitter{``0},CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,CenterSpace.NMath.Core.DoubleVector,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="ovf">A BoundedOneVariableFunctionFitter object containing a least squares fit of a
            parameterized function to the given x,y values.</param>
            <param name="x">The fitted x values.</param>
            <param name="y">The fitted y values.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="solution">>The parameters of the function at the found minimum.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( ovf, x, y, solution, numInterpolatedValues ) );
            </code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.Bridge,CenterSpace.NMath.Core.BridgeFunctions,CenterSpace.NMath.Core.IComputeDevice,System.Double,System.Double,System.Int32)">
            <summary>
            Returns a chart showing the current routing model for the given GPU-aware operation and compute device.
            </summary>
            <param name="bridge">A bridge object containing routing models.</param>
            <param name="function">A GPU-aware operation.</param>
            <param name="device">A compute device.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
            <exception cref="T:CenterSpace.NMath.Core.NMathException">
            Thrown if a routing model cannot be found for the given function and device in the given bridge. Call Tune() first.
            </exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.Bridge,CenterSpace.NMath.Core.BridgeFunctions,CenterSpace.NMath.Core.IComputeDevice,System.Double,System.Double,System.Int32)">
            <summary>
            Updates the given chart with the specified function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="bridge">A bridge object containing routing models.</param>
            <param name="function">A GPU-aware operation.</param>
            <param name="device">A compute device.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
            <exception cref="T:CenterSpace.NMath.Core.NMathException">
            Thrown if a routing model cannot be found for the given function and device name in the given bridge. Call Tune() first.
            </exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.Bridge,CenterSpace.NMath.Core.BridgeFunctions,CenterSpace.NMath.Core.IComputeDevice,System.Double,System.Double,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="bridge">A bridge object containing routing models.</param>
            <param name="function">A GPU-aware operation.</param>
            <param name="device">A compute device.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( bridge, function, device, xmin, ymin, numInterpolatedValues ) );
            </code>
            </remarks>
            <exception cref="T:CenterSpace.NMath.Core.NMathException">
            Thrown if a routing model cannot be found for the given function and device in the given bridge. Call Tune() first.
            </exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.ToChart(CenterSpace.NMath.Core.RoutingModel,System.Double,System.Double,System.Int32)">
            <summary>
            Returns a chart showing the current routing model for the given GPU-aware operation and compute device.
            </summary>
            <param name="model">A routing model.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <returns>A new chart.</returns>
            <exception cref="T:CenterSpace.NMath.Core.NMathException">
            Thrown if a routing model cannot be found for the given function and device in the given bridge. Call Tune() first.
            </exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,CenterSpace.NMath.Core.RoutingModel,System.Double,System.Double,System.Int32)">
            <summary>
            Updates the given chart with the specified function.
            </summary>
            <param name="chart">A chart.</param>
            <param name="model">A routing model.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            A new, default ChartArea is added if one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
            <exception cref="T:CenterSpace.NMath.Core.NMathException">
            Thrown if a routing model cannot be found for the given function and device in the given bridge. Call Tune() first.
            </exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(CenterSpace.NMath.Core.RoutingModel,System.Double,System.Double,System.Int32)">
            <summary>
            Shows a new chart in a default form.
            </summary>
            <param name="model">A routing model.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <remarks>
            Equivalent to:
            <code>
            NMathChart.Show( ToChart( bridge, function, device, xmin, ymin, numInterpolatedValues ) );
            </code>
            </remarks>
            <exception cref="T:CenterSpace.NMath.Core.NMathException">
            Thrown if a routing model cannot be found for the given function and device in the given bridge. Call Tune() first.
            </exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.SetXAxisBounds(System.Windows.Forms.DataVisualization.Charting.Chart@,System.Double,System.Double)">
            <summary>
            Sets the minimum and maximum values of a chart's X axis.
            </summary>
            <param name="chart">The chart to update.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Show(System.Windows.Forms.DataVisualization.Charting.Chart)">
            <summary>
            Shows the given chart in a default form.
            </summary>
            <param name="chart">The chart to display.</param>
            <remarks>
            Note that when the window is closed, the chart is disposed.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Compose(System.Collections.Generic.IEnumerable{System.Windows.Forms.DataVisualization.Charting.Chart},System.Int32,System.Int32,CenterSpace.NMath.Charting.Microsoft.NMathChart.AreaLayoutOrder)">
            <summary>
            Compose the chart areas and data series from the given charts into a new
            composite chart.
            </summary>
            <param name="charts">Component charts.</param>
            <param name="rows">The number of rows.</param>
            <param name="cols">The number of columns.</param>
            <param name="order">The layout order.</param>
            <returns>A new composite chart.</returns>
            <remarks>Component chart titles and legends are ignored.</remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Save(System.Windows.Forms.DataVisualization.Charting.Chart,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Save the chart image to the specified filename.
            </summary>
            <param name="chart">The chart.</param>
            <param name="filename">The filename.</param>
            <param name="format">The image format.</param>
            <remarks>
            Equivalent to:
            <code>chart.SaveImage( filename, format );</code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Save(System.Windows.Forms.DataVisualization.Charting.Chart,System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Save the chart image to the specified stream.
            </summary>
            <param name="chart">The chart.</param>
            <param name="stream">The image stream.</param>
            <param name="format">The image format.</param>
            <remarks>
            Equivalent to:
            <code>chart.SaveImage( stream, format );</code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Save(System.Windows.Forms.DataVisualization.Charting.Chart,System.String,System.Windows.Forms.DataVisualization.Charting.ChartImageFormat)">
            <summary>
            Save the chart image to the specified filename.
            </summary>
            <param name="chart">The chart.</param>
            <param name="filename">The filename.</param>
            <param name="format">The image format.</param>
            <remarks>
            Equivalent to:
            <code>chart.SaveImage( filename, format );</code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Save(System.Windows.Forms.DataVisualization.Charting.Chart,System.IO.Stream,System.Windows.Forms.DataVisualization.Charting.ChartImageFormat)">
            <summary>
            Save the chart image to the specified stream.
            </summary>
            <param name="chart">The chart.</param>
            <param name="stream">The image stream.</param>
            <param name="format">The image format.</param>
            <remarks>
            Equivalent to:
            <code>chart.SaveImage( stream, format );</code>
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.BindY(CenterSpace.NMath.Core.FloatVector,System.Windows.Forms.DataVisualization.Charting.SeriesChartType,System.Windows.Forms.DataVisualization.Charting.MarkerStyle)">
            <summary>
            Returns a data series of the given data.
            </summary>
            <param name="data">The y values.</param>
            <param name="type">The chart type.</param>
            <param name="marker">The marker style to use.</param>
            <returns>A new data series.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.BindY(CenterSpace.NMath.Core.DoubleVector,System.Windows.Forms.DataVisualization.Charting.SeriesChartType,System.Windows.Forms.DataVisualization.Charting.MarkerStyle)">
            <summary>
            Returns a data series of the given data.
            </summary>
            <param name="data">The y values.</param>
            <param name="type">The chart type.</param>
            <param name="marker">The marker style to use.</param>
            <returns>A new data series.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.BindXY(CenterSpace.NMath.Core.FloatVector,CenterSpace.NMath.Core.FloatVector,System.Windows.Forms.DataVisualization.Charting.SeriesChartType,System.Windows.Forms.DataVisualization.Charting.MarkerStyle)">
            <summary>
            Returns a data series of the given data.
            </summary>
            <param name="x">The x data.</param>
            <param name="y">The y data.</param>
            <param name="type">The chart type.</param>
            <param name="marker">The marker style to use.</param>
            <returns>A new data series.</returns>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">Thrown if x and y have different lengths.</exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.BindXY(CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.FloatVector,System.Windows.Forms.DataVisualization.Charting.SeriesChartType,System.Windows.Forms.DataVisualization.Charting.MarkerStyle)">
            <summary>
            Returns a data series of the given data.
            </summary>
            <param name="x">The x data.</param>
            <param name="y">The y data.</param>
            <param name="type">The chart type.</param>
            <param name="marker">The marker style to use.</param>
            <returns>A new data series.</returns>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">Thrown if x and y have different lengths.</exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.BindXY(CenterSpace.NMath.Core.DoubleVector,CenterSpace.NMath.Core.DoubleVector,System.Windows.Forms.DataVisualization.Charting.SeriesChartType,System.Windows.Forms.DataVisualization.Charting.MarkerStyle)">
            <summary>
            Returns a data series of the given data.
            </summary>
            <param name="x">The x data.</param>
            <param name="y">The y data.</param>
            <param name="type">The chart type.</param>
            <param name="marker">The marker style to use.</param>
            <returns>A new data series.</returns>
            <exception cref="T:CenterSpace.NMath.Core.MismatchedSizeException">Thrown if x and y have different lengths.</exception>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.BindXY(CenterSpace.NMath.Core.TabulatedFunction,System.Windows.Forms.DataVisualization.Charting.SeriesChartType,System.Windows.Forms.DataVisualization.Charting.MarkerStyle)">
            <summary>
            Returns a data series containing the tabulated function values.
            </summary>
            <param name="f">The function.</param>
            <param name="type">The chart type.</param>
            <param name="marker">The marker style to use.</param>
            <returns>A new data series.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.BindXY(CenterSpace.NMath.Core.OneVariableFunction,System.Double,System.Double,System.Int32,System.Windows.Forms.DataVisualization.Charting.SeriesChartType,System.Windows.Forms.DataVisualization.Charting.MarkerStyle)">
            <summary>
            Returns a data series interpolating over the given function.
            </summary>
            <param name="f">The function.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <param name="type">The chart type.</param>
            <param name="marker">The marker style to use.</param>
            <returns>A new data series.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.BindXY(CenterSpace.NMath.Core.DoubleParameterizedFunction,CenterSpace.NMath.Core.DoubleVector,System.Double,System.Double,System.Int32,System.Windows.Forms.DataVisualization.Charting.SeriesChartType,System.Windows.Forms.DataVisualization.Charting.MarkerStyle)">
            <summary>
            Returns a data series interpolating over the given function.
            </summary>
            <param name="f">The function.</param>
            <param name="parameters">The function parameters.</param>
            <param name="xmin">The starting x value.</param>
            <param name="xmax">The ending x value.</param>
            <param name="numInterpolatedValues">The number of interpolated values.</param>
            <param name="type">The chart type.</param>
            <param name="marker">The marker style to use.</param>
            <returns>A new data series.</returns>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,System.Windows.Forms.DataVisualization.Charting.Series,System.String,System.String,System.String)">
            <summary>
            Updates the given chart with the given data series, title, and axis titles.
            </summary>
            <param name="chart">The chart.</param>
            <param name="series">The data Series.</param>
            <param name="title">The title.</param>
            <param name="xTitle">The x axis title.</param>
            <param name="yTitle">The y axis title.</param>
            <remarks>
            A new, default ChartArea is added is one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            The title is added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,System.Collections.Generic.List{System.Windows.Forms.DataVisualization.Charting.Series},System.String,System.String,System.String)">
            <summary>
            Updates the given chart with the given data series, titles, and axis titles.
            </summary>
            <param name="chart">The chart.</param>
            <param name="series">A list of Series.</param>
            <param name="title">The title.</param>
            <param name="xTitle">The x axis title.</param>
            <param name="yTitle">The y axis title.</param>
            <remarks>
            A new, default ChartArea is added is one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            The title is added only if chart does not currently contain any titles.
            <br/>
            The first series.Count data series on chart are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,System.Windows.Forms.DataVisualization.Charting.Series,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            Updates the given chart with the given data series, titles, and axis titles.
            </summary>
            <param name="chart">The chart.</param>
            <param name="series">The data Series.</param>
            <param name="titles">A list of title strings.</param>
            <param name="xTitle">The x axis title.</param>
            <param name="yTitle">The y axis title.</param>
            <remarks>
            A new, default ChartArea is added is one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            chart.Series[0] is replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Update(System.Windows.Forms.DataVisualization.Charting.Chart@,System.Collections.Generic.List{System.Windows.Forms.DataVisualization.Charting.Series},System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            Updates the given chart with the given data series, titles, and axis titles.
            </summary>
            <param name="chart">The chart.</param>
            <param name="series">A list of Series.</param>
            <param name="titles">A list of title strings.</param>
            <param name="xTitle">The x axis title.</param>
            <param name="yTitle">The y axis title.</param>
            <remarks>
            A new, default ChartArea is added is one does not exist, otherwise chart.ChartAreas[0] is used.
            Axis titles, and DefaultAxisTitleFont and DefaultMajorGridLineColor, only have an effect if
            a new ChartArea is added.
            <br/>
            Titles are added only if chart does not currently contain any titles.
            <br/>
            The first series.Count data series on chart are replaced, or added if necessary.
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.GetDefaultChart">
            <summary>
            Gets a new chart of the default size.
            </summary>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.GetAreaPosition(System.Int32,System.Int32,System.Int32,CenterSpace.NMath.Charting.Microsoft.NMathChart.AreaLayoutOrder)">
            <summary>
            Determines the element position of specified chart in a composite chart of the specified size and layout order.
            </summary>
            <param name="n">The chart number.</param>
            <param name="rows">The number of rows in the grid.</param>
            <param name="cols">The number of columns in the grid.</param>
            <param name="order">The layout order.</param>
            <returns>The element position of the specified chart.</returns>
        </member>
        <member name="T:CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit">
            <summary>
            Class Unit represents a unit of physical quantity.
            </summary>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit.#ctor">
            <summary>
            Default constructor.
            </summary>
            <remarks>
            Constructs a Unit with start = 0, step = 1, and name = "Index";
            </remarks>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Constructs a Unit with the specified starting value, step size, and name.
            </summary>
            <param name="start">The starting value.</param>
            <param name="step">The step size.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit.Start">
            <summary>
            Gets and sets the starting value.
            </summary>
        </member>
        <member name="P:CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit.Step">
            <summary>
            Gets and sets the step size.
            </summary>
        </member>
        <member name="P:CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit.Name">
            <summary>
            Gets and sets the name.
            </summary>
        </member>
        <member name="M:CenterSpace.NMath.Charting.Microsoft.NMathChart.Unit.ToDoubleVector(System.Int32)">
            <summary>
            Returns a vector representation of this unit of the specified length.
            </summary>
            <param name="length">The vector length.</param>
            <returns></returns>
        </member>
    </members>
</doc>
